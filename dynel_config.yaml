# Dynamic Error Logging Configuration
#
# This configuration file defines expected exceptions for different functions and controls
# the debug mode for the dynamic error logging module (dynel.py).
#
# To configure expected exceptions, add function names as keys and lists of exception
# class names as values. The module-level "__main__" key defines exceptions for the
# main module.
#
# To enable debug mode, set "debug_mode" to true.
#
# Example:
#   create_boto3_session:
#     - botocore.exceptions.NoCredentialsError
#     - botocore.exceptions.PartialCredentialsError
#     - botocore.exceptions.SSLError
#     - Exception
#   backup_route53_to_s3:
#     - botocore.exceptions.BotoCoreError
#     - tqdm.TqdmKeyError
#     - Exception
#   __main__:
#     - argparse.ArgumentError
#     - Exception
#   debug_mode: true

# Dynamic Error Logging Configuration

debug_mode: false

create_boto3_session:
  exceptions:
    - botocore.exceptions.NoCredentialsError
    - botocore.exceptions.PartialCredentialsError
    - botocore.exceptions.SSLError
    - botocore.exceptions.EndpointConnectionError
    - Exception
  custom_message: "Failed to create a boto3 session."
  tags: [AWS, boto3, Session]

generate_local_backup:
  exceptions:
    - botocore.exceptions.BotoCoreError
    - FileNotFoundError
    - PermissionError
    - Exception
  custom_message: "Failed to generate local backups for Route 53."
  tags: [AWS, Route53, Backup]
  behaviors:
    FileNotFoundError: # Specific behavior for FileNotFoundError
      log_to_specific_file: "logs/file_not_found_backup_errors.log"
      add_metadata:
        error_category: "File System"
        recovery_tip: "Ensure the source path exists and has correct permissions for backup."
        severity_override: "HIGH"
    PermissionError: # Specific behavior for PermissionError
      add_metadata:
        error_category: "OS Permissions"
        contact_team: "security_operations"
    default: # Default behaviors for other exceptions in this function (BotoCoreError, Exception)
      add_metadata:
        function_group: "Local Backup Operations"
        attempt_retry: "false"

compress_backup_files:
  exceptions:
    - FileNotFoundError
    - tarfile.TarError
    - Exception # Catchall for other errors during compression
  custom_message: "Compression of backup files failed."
  tags: [Compression, Backup]
  behaviors:
    FileNotFoundError: # Specific behavior for FileNotFoundError
      log_to_specific_file: "logs/file_not_found_compression_errors.log"
      add_metadata:
        error_code: "COMP-FNF-001"
        description: "Input file for compression not found."
    tarfile.TarError: # Specific behavior for TarError
      add_metadata:
        error_code: "COMP-TAR-002"
        description: "Error related to tar file creation or processing."
        recommendation: "Check disk space and file integrity."
    default: # Default for other exceptions (e.g. generic Exception)
      add_metadata:
        component: "Archiving"

# This is a new example function configuration for testing purposes
# It will be used in test_exception_handling.py or cli.py for demonstration
example_behavior_test_function:
  exceptions:
    - ValueError
    - TypeError
    - IndexError
  custom_message: "Error in example_behavior_test_function."
  tags: [Test, Behaviors]
  behaviors:
    ValueError:
      add_metadata:
        value_error_info: "Specific details about the value error."
        error_id: "VE-001"
      log_to_specific_file: "logs/value_errors.log"
    TypeError:
      add_metadata:
        type_error_info: "Specific details about the type error."
        error_id: "TE-001"
    default: # For IndexError and any other non-specified exceptions in the list
      add_metadata:
        default_behavior_active: true
        severity: "MEDIUM"
      log_to_specific_file: "logs/example_other_errors.log"


configure_s3_bucket:
  exceptions:
    - botocore.exceptions.BotoCoreError
    - botocore.exceptions.ParamValidationError
    - Exception
  custom_message: "S3 Bucket configuration failed."
  tags: [AWS, S3, Configuration]

find_or_create_s3_bucket:
  exceptions:
    - botocore.exceptions.BotoCoreError
    - Exception
  custom_message: "Could not find or create the S3 bucket."
  tags: [AWS, S3, Bucket]

upload_to_s3:
  exceptions:
    - botocore.exceptions.S3UploadFailedError
    - Exception
  custom_message: "Uploading to S3 bucket failed."
  tags: [AWS, S3, Upload]

backup_route53_to_s3:
  exceptions:
    - botocore.exceptions.BotoCoreError
    - tqdm.TqdmKeyError
    - tqdm.TqdmWarning
    - json.JSONDecodeError
  custom_message: "Route 53 backup to S3 failed."
  tags: [AWS, Route53, S3, Backup]

__main__:
  exceptions:
    - argparse.ArgumentError
    - argparse.ArgumentTypeError
    - FileNotFoundError
    - PermissionError
  custom_message: "Main function encountered an error."
  tags: [Main, CLI]
